{"version":3,"sources":["assets/images/mario.png","app/store/reducers/notification/notificationSlice.js","app/components/map/components/icon/Icon.jsx","app/components/map/components/edit-control/EditControl.jsx","config/map.config.js","app/components/map/Map.jsx","app/store/reducers/user/userSlice.js","app/store/reducers/location/locationSlice.js","app/components/Navbar/Navbar.jsx","app/components/dialogs/Modal.jsx","app/components/dialogs/Login/Location/Location.jsx","app/components/dialogs/Login/UserForm/UserForm.jsx","app/components/spinner/Spinner.jsx","app/components/dialogs/Login/Login.jsx","app/components/notification/Notification.jsx","app/App.jsx","app/store/store.js","serviceWorker.js","index.jsx"],"names":["module","exports","slice","createSlice","name","initialState","value","undefined","reducers","setNotification","state","action","payload","clearNotification","actions","customIcon","parentElement","document","createElement","className","element","src","mario","appendChild","Icon","eventHandlers","onEdited","onDrawStart","onDrawStop","onDrawVertex","onEditStart","onEditMove","onEditResize","onEditVertex","onEditStop","onDeleted","onDeleteStart","onDeleteStop","EditControl","onDrawCreate","e","onCreated","props","leaflet","layerContainer","addLayer","layer","createDrawElement","map","this","onMounted","key","on","Draw","Event","CREATED","leafletElement","off","prevProps","isEqual","draw","position","remove","addTo","MapControl","edit","options","featureGroup","Control","propTypes","Object","keys","reduce","acc","val","PropTypes","func","shape","polyline","oneOfType","object","bool","polygon","rectangle","circle","marker","poly","allowIntersection","oneOf","instanceOf","Map","isRequired","removeLayer","withLeaflet","lat","lng","zoom","style","width","height","use","openstreetmap","attribution","url","selected","mapRef","createRef","setCircleRef","circleBounds","getBounds","current","setMaxBounds","_onEditPath","console","log","_onDeleted","del","_onCreate","create","geoJson","toGeoJSON","bounds","contains","sendNotification","message","err","center","location","mapConfig","ref","Circle","radius","Marker","draggable","icon","title","alt","LayersControl","tileProvider","BaseLayer","checked","TileLayer","Overlay","FeatureGroup","shapeOptions","stroke","color","weight","opacity","fill","fillColor","fillOpacity","showArea","clickable","metric","circlemarker","showLength","drawError","timeout","Component","connect","user","dispatch","notification","authToken","localStorage","getItem","JSON","parse","loggedIn","logOut","removeItem","logInSync","setItem","stringify","selectUser","selectToken","locationSupport","navigator","geolocation","setLocation","loc","removeLocation","Navbar","useDispatch","token","useSelector","href","username","onClick","Modal","getApplicationNode","getElementById","applicationNode","activateModal","setState","modalActive","deactivateModal","active","id","denyLocation","UserInput","submitForm","event","preventDefault","login","updateUserName","target","trim","test","errors","updateGender","gender","updatePreferences","preference","onSubmit","htmlFor","fontSize","type","backgroundColor","onBlur","onChange","appliedClasses","setLoading","getCurrentPosition","coords","latitude","longitude","enableHighAccuracy","loading","isLoggedIn","titleText","initialFocus","underlayClickExits","verticallyCenter","underlayStyle","logIn","RootModal","setLocationAction","userDetail","data","notifications","configureStore","reducer","locationReducer","userReducer","notificationReducer","Boolean","window","hostname","match","ReactDOM","render","store","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.49b36811.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mario.fd0f1148.png\";","import { createSlice } from '@reduxjs/toolkit';\n\nexport const slice = createSlice({\n  name: 'notifications',\n  initialState: {\n    value: undefined\n  },\n  reducers: {\n    setNotification: (state, action) => {\n      state.value = action.payload;\n    },\n    clearNotification: (state, action) => {\n      state.value = undefined;\n    }\n  }\n});\n\nexport const { setNotification, clearNotification } = slice.actions;\n\nexport const selectNotification = state => state.notifications.value;\n\nexport default slice.reducer;","import { Icon } from 'leaflet';\nimport './Icon.css';\nimport mario from './../../../../../assets/images/mario.png';\n\nclass CustomIcon extends Icon {\n  createIcon() {\n    let parentElement = document.createElement('div');\n    parentElement.className = \"icon-style\";\n    let element = document.createElement('img');\n    element.src = mario;\n    element.className = \"mario\";\n    parentElement.appendChild(element);\n    return parentElement;\n  }\n}\n\nconst customIcon = new CustomIcon();\n\nexport default customIcon;","import { PropTypes } from 'prop-types';\nimport Draw from 'leaflet-draw'; // eslint-disable-line no-unused-vars\nimport {isEqual} from 'lodash';\n\nimport { MapControl, withLeaflet } from 'react-leaflet';\nimport leaflet, { Map, Control } from 'leaflet';\n\nconst eventHandlers = {\n  onEdited: 'draw:edited',\n  onDrawStart: 'draw:drawstart',\n  onDrawStop: 'draw:drawstop',\n  onDrawVertex: 'draw:drawvertex',\n  onEditStart: 'draw:editstart',\n  onEditMove: 'draw:editmove',\n  onEditResize: 'draw:editresize',\n  onEditVertex: 'draw:editvertex',\n  onEditStop: 'draw:editstop',\n  onDeleted: 'draw:deleted',\n  onDeleteStart: 'draw:deletestart',\n  onDeleteStop: 'draw:deletestop'\n};\n\nclass EditControl extends MapControl {\n  static propTypes = {\n    ...Object.keys(eventHandlers).reduce((acc, val) => {\n      acc[val] = PropTypes.func;\n      return acc;\n    }, {}),\n    onCreated: PropTypes.func,\n    onMounted: PropTypes.func,\n    draw: PropTypes.shape({\n      polyline: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n      polygon: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n      rectangle: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n      circle: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n      marker: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n    }),\n    edit: PropTypes.shape({\n      edit: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n      remove: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n      poly: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n      allowIntersection: PropTypes.bool,\n    }),\n    position: PropTypes.oneOf([\n      'topright',\n      'topleft',\n      'bottomright',\n      'bottomleft'\n    ]),\n    leaflet: PropTypes.shape({\n      map: PropTypes.instanceOf(Map),\n      layerContainer: PropTypes.shape({\n        addLayer: PropTypes.func.isRequired,\n        removeLayer: PropTypes.func.isRequired\n      })\n    })\n  };\n\n  createLeafletElement(props) {\n    return createDrawElement(props);\n  }\n\n  onDrawCreate = (e) => {\n    const { onCreated } = this.props;\n    const { layerContainer } = this.props.leaflet;\n\n    layerContainer.addLayer(e.layer);\n    onCreated && onCreated(e);\n  };\n\n  componentDidMount() {\n    super.componentDidMount();\n    const { map } = this.props.leaflet;\n    const { onMounted } = this.props;\n\n    for (const key in eventHandlers) {\n      if (this.props[key]) {\n        map.on(eventHandlers[key], this.props[key]);\n      }\n    }\n\n    map.on(leaflet.Draw.Event.CREATED, this.onDrawCreate);\n\n    onMounted && onMounted(this.leafletElement);\n  }\n\n  componentWillUnmount() {\n    super.componentWillUnmount();\n    const { map } = this.props.leaflet;\n\n    map.off(leaflet.Draw.Event.CREATED, this.onDrawCreate);\n\n    for (const key in eventHandlers) {\n      if (this.props[key]) {\n        map.off(eventHandlers[key], this.props[key]);\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // super updates positions if thats all that chaned so call this first\n    super.componentDidUpdate(prevProps);\n\n    if (isEqual(this.props.draw, prevProps.draw) || this.props.position !== prevProps.position) {\n      return false;\n    }\n\n    const { map } = this.props.leaflet;\n\n    this.leafletElement.remove(map);\n    this.leafletElement = createDrawElement(this.props);\n    this.leafletElement.addTo(map);\n\n    return null;\n  }\n}\n\nfunction createDrawElement(props) {\n  const { layerContainer } = props.leaflet;\n  const { draw, edit, position } = props;\n  const options = {\n    edit: {\n      ...edit,\n      featureGroup: layerContainer\n    }\n  };\n\n  if (draw) {\n    options.draw = { ...draw };\n  }\n\n  if (position) {\n    options.position = position;\n  }\n\n  return new Control.Draw(options);\n}\n\nexport default withLeaflet(EditControl);","export default {\n  lat: 30.590485,\n  lng: 114.324765,\n  zoom: 15,\n  style:  {  width: '100%', height: '95vh' },\n  use: \"openstreetmap\",\n  openstreetmap: [\n    {\n      name: \"Simple\",\n      attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n      url: 'https://cartodb-basemaps-a.global.ssl.fastly.net/light_all/{z}/{x}/{y}@2x.png',\n      selected: true\n    },\n    {\n      name: \"Black and White\",\n      attribution: '&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n      url: 'https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png'\n    },\n    {\n      name: \"Toner\",\n      attribution: 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n      url: 'https://stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}{r}.png'\n    }, \n    {\n      name: \"Watercolor\",\n      attribution: 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n      url: 'https://stamen-tiles-{s}.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.png'\n    }\n  ]\n}","import React, { Component, Fragment, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Map as LeafletMap, TileLayer, Circle, Marker, LayersControl, FeatureGroup } from 'react-leaflet'\nimport './Map.css';\nimport { setNotification } from './../../store/reducers/notification/notificationSlice';\nimport icon from './components/icon/Icon';\nimport EditControl from './components/edit-control/EditControl';\nimport mapConfig from './../../../config/map.config';\n\nclass Map extends Component {\n  mapRef = createRef();\n\n  setCircleRef = (element) => {\n    this.circleBounds = element.leafletElement.getBounds();\n    this.mapRef.current.leafletElement.setMaxBounds(this.circleBounds);\n  }\n  \n  _onEditPath = (edit) => {\n    console.log(edit);\n  }\n\n  _onDeleted = (del) => {\n    console.log(del);\n  }\n\n  _onCreate = (create) => {\n    console.log(create);\n    try {\n      let geoJson = create.layer.toGeoJSON();\n      console.log(geoJson);\n      let bounds = create.layer.getBounds();\n      let result = this.circleBounds.contains(bounds);\n      if (!result) {\n        create.layer.remove();\n        this.props.sendNotification({\n          message: \"Draw your shape inside circle only!\"\n        })\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render () {\n    return (\n      <LeafletMap \n        center={this.props.location ? [this.props.location.lat, this.props.location.lng] : [mapConfig.lat, mapConfig.lng]} \n        zoom={mapConfig.zoom} \n        style={mapConfig.style}\n        className={this.props.className}\n        ref={this.mapRef}\n        >\n        {\n          this.props.location ?\n          (<Fragment>\n            <Circle ref={this.setCircleRef} center={[this.props.location.lat, this.props.location.lng]} radius={3000}/>\n            <Marker position={[this.props.location.lat, this.props.location.lng]} draggable={false} icon={icon} title=\"You are here\" alt=\"mario\"/>\n          </Fragment>\n          ) : false\n        }\n        <LayersControl position=\"topright\">\n          {\n            mapConfig[mapConfig.use].map( tileProvider => {\n              return (\n                <LayersControl.BaseLayer name={tileProvider.name} checked={tileProvider.selected}>\n                  <TileLayer\n                    attribution={tileProvider.attribution}\n                    url={tileProvider.url}\n                  />\n                </LayersControl.BaseLayer>\n              );\n            })\n          }\n          <LayersControl.Overlay name=\"My Area\" checked>\n            <FeatureGroup>\n              <EditControl\n                position='bottomright'\n                onEdited={this._onEditPath}\n                onCreated={this._onCreate}\n                onDeleted={this._onDeleted}\n                draw={{\n                  rectangle: {\n                    shapeOptions: {\n                      stroke: true,\n                      color: '#ee88ff',\n                      weight: 4,\n                      opacity: 0.5,\n                      fill: true,\n                      fillColor: null, //same as color by default\n                      fillOpacity: 0.2,\n                      showArea: true,\n                      clickable: false\n                    },\n                    metric: false\n                  },\n                  circle: false,\n                  polyline: false,\n                  marker: false,\n                  circlemarker: false,\n                  polygon: {\n                    showLength: true,\n                    allowIntersection: false,\n                    drawError: {\n                        color: '#b00b00',\n                        timeout: 1000\n                    },\n                    shapeOptions: {\n                      stroke: true,\n                      color: '#ee88ff',\n                      weight: 4,\n                      opacity: 0.5,\n                      fill: true,\n                      fillColor: null, //same as color by default\n                      fillOpacity: 0.2,\n                      showArea: true,\n                      clickable: false\n                    }\n                  }\n                }}\n              />\n            </FeatureGroup>\n          </LayersControl.Overlay>\n        </LayersControl>\n      </LeafletMap>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { location: state.location.value, user: state.user.value }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  sendNotification: (notification) => dispatch(setNotification(notification))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);","import { createSlice } from '@reduxjs/toolkit';\n\nlet authToken = localStorage.getItem('authToken');\nlet user = localStorage.getItem('user');\n\nexport const slice = createSlice({\n  name: 'user',\n  initialState: {\n    value: user ? JSON.parse(user) : undefined,\n    loggedIn: authToken ? true : false,\n    authToken: authToken\n  },\n  reducers: {\n    logOut: (state) => {\n      state.value = undefined;\n      state.loggedIn = false;\n      state.authToken = undefined;\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('user');\n    },\n    logInSync: (state, action) => {\n      state.value = action.payload.value;\n      state.authToken = action.payload.authToken;\n      state.loggedIn = true;\n      localStorage.setItem('authToken', action.payload.authToken);\n      localStorage.setItem('user', JSON.stringify(action.payload.value));\n    }\n  }\n});\n\nexport const { logOut, logInSync } = slice.actions;\n\nexport const logInAsync = userDetail => dispatch => {\n  // make a call to the backend and then save the data based on the information received\n  dispatch(logInSync({value: userDetail, authToken: 'asdf'}));\n};\n\nexport const selectUser = state => state.user.value;\nexport const selectToken = state => state.user.authToken;\n\nexport default slice.reducer;","import { createSlice } from '@reduxjs/toolkit';\n\nlet location = localStorage.getItem('location');\n\nexport const slice = createSlice({\n  name: 'location',\n  initialState: {\n    value: location ? JSON.parse(location) : undefined,\n    locationSupport: !!navigator.geolocation\n  },\n  reducers: {\n    setLocation: (state, action) => {\n      let loc = {\n        lat: action.payload.lat,\n        lng: action.payload.lng\n      }\n      state.value = loc;\n      localStorage.setItem('location', JSON.stringify(loc));\n    },\n    removeLocation: (state) => {\n      state.value = undefined;\n      localStorage.removeItem('location');\n    }\n  }\n});\n\nexport const { setLocation, removeLocation } = slice.actions;\n\n/**\n * sample async reducer code\n */\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\n// export const setAsync = amount => dispatch => {\n//   setTimeout(() => {\n//     dispatch(syncReducer(amount));\n//   }, 1000);\n// };\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectLocation = state => state.location.value;\n\nexport default slice.reducer;","import React from 'react';\nimport './Navbar.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectToken, selectUser, logOut } from './../../store/reducers/user/userSlice';\nimport { removeLocation } from './../../store/reducers/location/locationSlice';\n\nexport default function Navbar (props) {\n  const dispatch = useDispatch();\n  let token = useSelector(selectToken);\n  let user = useSelector(selectUser);\n  return (\n    <nav className={props.className}>\n      <ul className=\"list\">\n        <li className=\"nes-text is-primary list-item\"><a className=\"nes-pointer\" href=\"/findr\">findr</a></li>\n        {user ? <li className=\"nes-text list-item\">{user.username}</li> : false}\n        {token ? <li className=\"nes-text is-error list-item\"><button className=\"logout-button\" onClick={()=>{ dispatch(logOut()); dispatch(removeLocation())}}>logout</button></li> : false}\n      </ul>\n    </nav>\n  )\n}","import { Component } from 'react';\n\nexport default class Modal extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalActive: props.active === true ? true : false\n    }\n  }\n\n  getApplicationNode = () => {\n    return document.getElementById(this.props.applicationNode);\n  }\n\n  activateModal = () => {\n    this.setState({ modalActive: true });\n  };\n\n  deactivateModal = () => {\n    this.setState({ modalActive: false });\n  };\n}","import React, { Fragment } from 'react';\nimport './Location.css';\n\nexport default (props) => {\n  return (\n    props.locationSupport ?\n      <Fragment>\n        <div className=\"modal-body\">\n          <h1>Please give us location access</h1>\n        </div>\n        <footer className=\"modal-footer\">\n          <button id=\"location-modal-give-access\" className=\"nes-btn is-success\" onClick={props.setLocation}>\n            Sure!\n          </button>\n          <button id=\"location-modal-cancel\" className=\"nes-btn is-error\" onClick={props.denyLocation}>\n            NO\n          </button>\n        </footer>\n      </Fragment>\n    : <p id=\"location-modal-confirm-location\">Your browser does not support geolocation</p>\n  );\n}","import React, { Component } from 'react';\nimport './UserForm.css';\n\nexport default class UserInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: undefined,\n      gender: \"male\",\n      preference: \"girls\",\n      errors: {\n        username: undefined,\n        gender: undefined,\n        preference: undefined\n      }\n    }\n  }\n\n  submitForm = (event) => {\n    event.preventDefault();\n    this.props.login(this.state);\n  }\n\n  updateUserName = (event) => {\n    let valid_username_regex = /^[A-Za-z0-9_-]+$/;\n    let username = event.target.value.trim();\n    if (!valid_username_regex.test(username)) {\n      this.setState({\n        ...this.state,\n        errors: {\n          ...this.state.errors,\n          username: \"can only contain alphanumeric _ and -\"\n        }\n      })\n    } else {\n      this.setState({\n        ...this.state,\n        username,\n        errors: {\n          ...this.state.errors,\n          username: undefined\n        }\n      });\n    }\n  }\n\n  updateGender = (event) => {\n    this.setState({\n      ...this.state,\n      gender: event.target.value\n    });\n  }\n\n  updatePreferences = (event) => {\n    this.setState({\n      ...this.state,\n      preference: event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.submitForm}>\n        <div className=\"nes-field\">\n          <label htmlFor=\"username_field\" style={{fontSize: \"1rem\"}}>Username</label>\n          <input type=\"text\" id=\"username_field\" className={`nes-input ${this.state.errors.username ? \"is-error\" : \"\"}`} style={{backgroundColor: 'whitesmoke'}} onBlur={this.updateUserName}/>\n          { this.state.errors.username ? <p className=\"nes-text is-error\">{this.state.errors.username}</p> : false }\n        </div>\n        <div className=\"orientation-details\">\n          <div className=\"nes-field nes-container with-title radio-input\">\n            <p className=\"title\" style={{backgroundColor: 'whitesmoke'}}>Gender</p>\n            <label>\n              <input type=\"radio\" className=\"nes-radio\" name=\"gender\" value=\"male\" checked={this.state.gender === \"male\"} onChange={this.updateGender} />\n              <span>Male</span>\n            </label>\n            <label>\n              <input type=\"radio\" className=\"nes-radio\" name=\"gender\" value=\"female\" checked={this.state.gender === \"female\"} onChange={this.updateGender} />\n              <span>Female</span>\n            </label>\n          </div>\n          <div className=\"nes-field nes-container with-title radio-input\">\n            <p className=\"title\" style={{backgroundColor: 'whitesmoke'}}>Preference</p>\n            <label>\n              <input type=\"radio\" className=\"nes-radio\" name=\"preference\" value=\"guys\" checked={this.state.preference === \"guys\"} onChange={this.updatePreferences} />\n              <span>Guys</span>\n            </label>\n            <label>\n              <input type=\"radio\" className=\"nes-radio\" name=\"preference\" value=\"girls\" checked={this.state.preference === \"girls\"} onChange={this.updatePreferences} />\n              <span>Girls</span>\n            </label>\n          </div>\n        </div>\n        <button type=\"submit\" className=\"nes-btn is-primary\">Let's go!</button>\n      </form>\n    );\n  }\n}","import React from 'react';\nimport './Spinner.css';\n\n/**\n * Available variants\n * Size: la-small, la-default, la-2x, la-3x\n * Color: default white, la-dark for black color. Other colors can be applied through color property\n */\nexport default (props) => {\n  let appliedClasses = props.className ? `la-ball-8bits ${props.className}` : \"la-ball-8bits\";\n  return (\n    <div className={appliedClasses}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  )\n}","import React from 'react';\nimport { connect } from 'react-redux'\nimport AriaModal from 'react-aria-modal';\nimport RootModal from '../Modal';\nimport { setLocation as setLocationAction } from '../../../store/reducers/location/locationSlice';\nimport { logInAsync } from './../../../store/reducers/user/userSlice';\nimport './Login.css';\nimport Location from './Location/Location';\nimport UserForm from './UserForm/UserForm';\nimport Spinner from './../../spinner/Spinner';\n\nclass Modal extends RootModal {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false\n    }\n  }\n\n  setLocation = () => {\n    this.setLoading(true);\n    navigator.geolocation.getCurrentPosition( position => {\n      this.setLoading(false);\n      this.props.setLocation({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      });\n    }, this.denyLocation, { enableHighAccuracy: true, timeout: 5000 });\n  }\n\n  denyLocation = () => {\n    this.setLoading(false);\n    this.props.setLocation({\n      lat: 30.590485,\n      lng: 114.324765\n    });\n  }\n\n  setLoading = (loading) => {\n    this.setState({\n      ...this.state,\n      loading\n    });\n  }\n\n  render () {\n    const modal = (this.props.location === undefined || this.props.isLoggedIn === false)\n      ? <AriaModal\n          titleText=\"Location Modal\"\n          initialFocus=\"#login-dialog-root\"\n          getApplicationNode={this.getApplicationNode}\n          underlayClickExits={false}\n          verticallyCenter={true}\n          underlayStyle={this.props.style}\n        >\n          <div id=\"login-dialog-root\" className=\"nes-dialog is-rounded modal custom-pointer\">\n            {\n              this.state.loading ?\n              (<div className=\"location-modal-spinner-parent\">\n                <div>Loading...</div>\n                <Spinner className=\"la-dark\"/>\n              </div>):\n              this.props.isLoggedIn === false ?\n              <UserForm login={this.props.logIn}/> :\n              <Location locationSupport={this.props.locationSupport} setLocation={this.setLocation} denyLocation={this.denyLocation}/>\n            }\n          </div>\n        </AriaModal>\n      : false;\n    return (\n      modal\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return { location: state.location.value, locationSupport: state.location.locationSupport, isLoggedIn: state.user.loggedIn, user: state.user.value }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setLocation: (location) => dispatch(setLocationAction(location)),\n    logIn: (user) => dispatch(logInAsync(user))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);","import React from 'react';\nimport AriaModal from 'react-aria-modal';\nimport RootModal from './../dialogs/Modal';\nimport './Notification.css';\nimport { clearNotification } from './../../store/reducers/notification/notificationSlice';\nimport { connect } from 'react-redux';\n\nclass Modal extends RootModal {\n  render () {\n    return (<AriaModal\n      titleText=\"Notification Modal\"\n      initialFocus=\"#notification-confirm-button\"\n      getApplicationNode={this.getApplicationNode}\n      underlayClickExits={false}\n      verticallyCenter={true}\n      underlayStyle={this.props.style}\n    >\n      <div id=\"notification-dialog-root\" className=\"nes-dialog is-rounded modal custom-pointer\">\n        <p className=\"nes-text\">{this.props.data.message}</p>\n        <button id=\"notification-confirm-button\" className=\"nes-btn is-primary\" onClick={this.props.clearNotification}>Okay!</button>\n      </div>\n    </AriaModal>);\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  clearNotification: () => dispatch(clearNotification())\n})\n\nexport default connect(undefined, mapDispatchToProps)(Modal);","import React, { Fragment } from 'react';\nimport './App.css';\nimport Map from './components/map/Map';\nimport Nav from './components/Navbar/Navbar';\nimport LocationModal from './components/dialogs/Login/Login';\nimport { connect } from 'react-redux';\nimport NotificationModal from './components/notification/Notification';\n\nfunction App(props) {\n  return (\n    <Fragment>\n      <div id=\"findr-root\">\n        <div id=\"location-dialog\">\n          <LocationModal applicationNode=\"location-dialog\"/>\n        </div>\n        { props.notifications ? <div id=\"notification-dialog\"><NotificationModal applicationNode=\"notification-dialog\" data={props.notifications}/></div> : false }\n        <Nav className=\"main-nav\"/>\n        <Map className=\"main-content\"/>\n      </div>\n    </Fragment>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return { notifications: state.notifications.value }\n}\n\nexport default connect(mapStateToProps)(App);","import { configureStore } from '@reduxjs/toolkit';\nimport locationReducer from './reducers/location/locationSlice';\nimport userReducer from './reducers/user/userSlice';\nimport notificationReducer from './reducers/notification/notificationSlice';\n\nexport default configureStore({\n  reducer: {\n    location: locationReducer,\n    user: userReducer,\n    notifications: notificationReducer\n  }\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'normalize.css';\nimport \"nes.css/css/nes.min.css\";\nimport App from './app/App';\nimport store from './app/store/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}